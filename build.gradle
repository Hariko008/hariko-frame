buildscript {
    ext {
        springBootVersion = '2.2.1.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath "io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

ext {
    gradleScriptDir = "${rootProject.projectDir}/gradle"

    // spring、springboot、springcloud版本对应关系参照 https://spring.io/projects/spring-cloud
    // 系统中用的springboot的版本
    springBootVersion   = "2.2.5.RELEASE"
    // 系统中用的spring的版本
    springVersion       = "5.2.4.RELEASE"
    // 系统中用的springcloud的版本
    springCloudVersion  = "Hoxton.SR1"
    springCloudClusterVersion = "1.0.2.RELEASE"
    springIntegrationVersion = "4.2.4.RELEASE"

    aspectjVersion      = "1.9.5"
    slf4jVersion        = "1.7.29"//"2.0.0-alpha1"
    log4j2Version       = "2.12.1"
    logbackVersion      = "1.2.3"//"1.3.0-alpha5"
    guavaVersion        = "28.1-jre"
    junitVersion        = "4.12"

    lettuceVersion      = "5.2.2.RELEASE"
    jedisVersion        = "3.2.0"
}

configure(subprojects) { project ->
    group = "com.hariko.frame"
    version = "1.0.0-SNAPSHOT"

    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = "UTF-8"
        options.compilerArgs += "-parameters"
    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    dependencies {
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}"){
            exclude module: "spring-boot-starter-logging"
            exclude module: "slf4j-api"
        }

        compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    }
}

configure(subprojects - project(":hariko-build-src")) { subproject ->
    apply from: "${gradleScriptDir}/publish-maven.gradle"

    jar {
        manifest.attributes["Implementation-Title"] = subproject.name
        manifest.attributes["Implementation-Version"] = subproject.version
        manifest.attributes["Automatic-Module-Name"] = subproject.name.replace('-', '.')
        manifest.attributes["Created-By"] =
                "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        archiveClassifier = "sources"
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}

